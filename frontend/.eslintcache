[{"/Users/stephenthomas/Desktop/AppTetra/frontend/src/index.js":"1","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reportWebVitals.js":"2","/Users/stephenthomas/Desktop/AppTetra/frontend/src/App.js":"3","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoginPage/LoginPage.js":"4","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Nav/Nav.js":"5","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Documentation/Documentation.js":"6","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignUp/SignUp.js":"7","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignIn/SignIn.js":"8","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/index.js":"9","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/isLogged.js":"10","/Users/stephenthomas/Desktop/AppTetra/frontend/src/actions/index.js":"11","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/HomePage/HomePage.js":"12","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/SubmitProject/SubmitProject.js":"13","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoadingPage/LoadingPage.js":"14","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Projects/Projects.js":"15","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Results/Results.js":"16","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectResults/ProjectResults.js":"17","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/ProjectProfile/ProjectProfile.js":"18","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectInfo/ProjectInfo.js":"19","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Purchase/Purchase.js":"20","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/CheckoutForm/CheckoutForm.js":"21","/Users/stephenthomas/Desktop/AppTetra/frontend/src/history.js":"22","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Purchases/Purchases.js":"23","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Running/Running.js":"24","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/DeleteLoadingPage/DeleteLoadingPage.js":"25","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Upload/Upload.js":"26"},{"size":914,"mtime":1612746718783,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1611286701503,"results":"29","hashOfConfig":"28"},{"size":2575,"mtime":1613235357601,"results":"30","hashOfConfig":"28"},{"size":1026,"mtime":1613244745411,"results":"31","hashOfConfig":"28"},{"size":3545,"mtime":1613244262326,"results":"32","hashOfConfig":"28"},{"size":1442,"mtime":1613269055670,"results":"33","hashOfConfig":"28"},{"size":4704,"mtime":1611447594960,"results":"34","hashOfConfig":"28"},{"size":3056,"mtime":1611617148217,"results":"35","hashOfConfig":"28"},{"size":184,"mtime":1611538354532,"results":"36","hashOfConfig":"28"},{"size":283,"mtime":1611544469989,"results":"37","hashOfConfig":"28"},{"size":177,"mtime":1611461794309,"results":"38","hashOfConfig":"28"},{"size":7116,"mtime":1613245056650,"results":"39","hashOfConfig":"28"},{"size":4280,"mtime":1613246519934,"results":"40","hashOfConfig":"28"},{"size":582,"mtime":1612470306520,"results":"41","hashOfConfig":"28"},{"size":769,"mtime":1613244351886,"results":"42","hashOfConfig":"28"},{"size":2206,"mtime":1612735892622,"results":"43","hashOfConfig":"28"},{"size":781,"mtime":1613244321778,"results":"44","hashOfConfig":"28"},{"size":2915,"mtime":1612748581923,"results":"45","hashOfConfig":"28"},{"size":784,"mtime":1613244298469,"results":"46","hashOfConfig":"28"},{"size":707,"mtime":1612748907391,"results":"47","hashOfConfig":"28"},{"size":3667,"mtime":1612751173812,"results":"48","hashOfConfig":"28"},{"size":88,"mtime":1612746547186,"results":"49","hashOfConfig":"28"},{"size":859,"mtime":1613244387051,"results":"50","hashOfConfig":"28"},{"size":846,"mtime":1613244401561,"results":"51","hashOfConfig":"28"},{"size":593,"mtime":1612845287785,"results":"52","hashOfConfig":"28"},{"size":1897,"mtime":1613244441964,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"l6dipi",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},"/Users/stephenthomas/Desktop/AppTetra/frontend/src/index.js",[],["109","110"],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reportWebVitals.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/App.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoginPage/LoginPage.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Nav/Nav.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Documentation/Documentation.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignUp/SignUp.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignIn/SignIn.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/index.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/isLogged.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/actions/index.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/HomePage/HomePage.js",["111"],"import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { Header } from 'semantic-ui-react'\n\nimport Projects from '../../Components/Projects/Projects';\nimport Purchases from '../../Components/Purchases/Purchases';\nimport Running from '../../Components/Running/Running';\n\nclass HomePage extends Component {\n    constructor() {\n    super();\n    this.state = {\n        email: undefined,       \n        list: [],\n        listOfPurchases: [],\n        listOfRunning: []\n        }\n        this.updateList = this.updateList.bind(this);\n  //      this.updateListOfPurchases = this.updateListOfPurchases.bind(this);\n        this.handleLoad = this.handleLoad.bind(this);\n        this.handlePopulate = this.handlePopulate.bind(this);\n        this.handlePopulateOfPurchases = this.handlePopulateOfPurchases.bind(this);\n        this.handlePopulateOfRunning = this.handlePopulateOfRunning.bind(this);\n        this.handleRun = this.handleRun.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n    \n    updateList(list){\n        this.setState({\n            list: list\n        })\n    }\n\n    updateListOfPuchases(listOfPurchases){\n        this.setState({\n            listOfPurchases: listOfPurchases\n        })  \n    }   \n\n    componentDidMount(){\n        return this.handleLoad();\n    }\n\n    handleLoad() {\n    this.state.email =  localStorage.getItem('email');\n    console.log(this.state.email);\n    const data = { email: this.state.email }\n    fetch('http://127.0.0.1:5000/api/Projects', {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log(data);\n        //[MainArray] //[Value i]\n        //Entries [MainArry] [ArrayofValues i] [Value j]\n        if (data.message !== false){\n            const len = data['projectName'][0].length;\n            console.log(len)\n            var list = [];\n            var listOfPurchases = [];\n            var listOfRunning = [];\n            for (var i = 0; i < len; i++){\n                list.push(this.handlePopulate(data['projectName'][0], data['git'][0], data['time'][0], data['entries'][0], i))\n            }\n            const size = data['purchases'][0].length;\n            //WILL NEED TO FETCH TO GET PROJECT NAME OF PURCHASE\n            //WILL NEED TO CHANGE CURRENTLY RUNNING TO A BOOLEAN\n            for (i = 0; i < size; i++){\n                listOfPurchases.push(this.handlePopulateOfPurchases(data['purchases'][0], data['inUse'][0], i))\n                console.log(size)\n                console.log(data['purchases'][0])\n            }\n            const sizeRunning = data['inUse'][0].length;\n            for (i = 0; i < sizeRunning; i++){\n                listOfRunning.push(this.handlePopulateOfRunning(data['inUse'][0], i))\n                console.log(size)\n            }\n            this.setState({\n                list: list\n            })\n            this.setState({\n                listOfPurchases: listOfPurchases\n            })\n            this.setState({\n                listOfRunning: listOfRunning\n            })\n            this.updateList(list)\n    //        this.updateListOfPurchases(listOfPurchases)\n            this.forceUpdate();\n        }\n    }\n    )\n    }\n\n    handleRun(event, i){\n        console.log(event.target.value)\n        const data = { projectID: event.target.value, email: localStorage.getItem('email') }\n        fetch(`http://127.0.0.1:5000/api/RunProgram`, {\n            crossDomain: true,\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success', data);\n            this.props.history.push('/LoadingPage');\n            })\n    }\n\n    handleStop(event, i){\n        console.log(event.target.value);\n        const data = { inUse: event.target.value, email: localStorage.getItem('email') }\n        fetch(`http://127.0.0.1:5000/api/StopProgram`, {\n            crossDomain: true,\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },      \n            body: JSON.stringify(data),\n            })  \n            .then(response => response.json())\n            .then(data => {\n            console.log('Success', data);\n            this.props.history.push('/DeleteLoadingPage');\n            })  \n    }\n\n    handlePopulate(projectName, git, time, entries, i){\n    return(\n           <Table striped bordered hover variant=\"dark\" key={i}>\n    <thead>\n        <tr>\n<th colSpan=\"2\">       \nProject Name: {projectName[i]} \n   </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n        <td colSpan=\"2\">\n  GitHub: {git[i]} \n    </td>\n    </tr>\n    <tr>\n        <td>\n  Time: {time[i]} \n    </td>\n        </tr>\n    </tbody>\n    </Table> \n    )\n    }\n\n    handlePopulateOfPurchases(projectID, inUse, i){\n    return(\n           <Table striped bordered hover variant=\"dark\" key={i}>\n    <thead>\n        <tr>\n<th colSpan=\"2\">\nProject Name: \n   </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n        <td colSpan=\"2\">\n  ProjectID: {projectID[i]}\n    </td>\n    </tr>\n    <tr>\n        <td>\n  Currently Running ProjectID: {inUse[i]}\n    </td>\n        </tr>\n    <tr>\n        <td>\n <Button value={projectID[i]} onClick={event => this.handleRun(event, \"value\")} variant=\"primary\">Run Program</Button>\n <Button value={inUse[i]} onClick={event => this.handleStop(event, \"value\")} variant=\"danger\">Stop Program</Button>\n    </td>\n        </tr>\n    </tbody>\n    </Table>\n    )\n    }\n\n    handlePopulateOfRunning(inUse, i){\n    return(\n           <Table striped bordered hover variant=\"dark\" key={i}>\n    <thead>\n        <tr>\n<th colSpan=\"2\">\nProject Name: \n   </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n        <td colSpan=\"2\">\n  ProjectID: {inUse[i]}\n    </td>\n    </tr>\n     <tr>\n       <td colSpan=\"2\">\n  <Button variant=\"primary\">View Project</Button>\n    </td>\n    </tr>\n    </tbody>\n    </Table>\n    )   \n    }\n    render(){\n    return (\n        <>\n        <Button href=\"/SubmitProject\"variant=\"success\">Submit A Project</Button>\n        <Header as='h1'>Your Projects</Header>\n        <Projects list={ this.state.list } handleLoad= { this.handleLoad} />\n        <Header as='h1'>Your Purchases</Header> \n        <Purchases listOfPurchases={ this.state.listOfPurchases } handleLoad= { this.handleLoad} />\n        <Header as='h1'>Running Programs</Header>  \n        <Running listOfRunning={ this.state.listOfRunning } handleLoad= { this.handleLoad} />\n        </>\n    )\n    }\n}\n\nexport default HomePage;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/SubmitProject/SubmitProject.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoadingPage/LoadingPage.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Projects/Projects.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Results/Results.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectResults/ProjectResults.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/ProjectProfile/ProjectProfile.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectInfo/ProjectInfo.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Purchase/Purchase.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/CheckoutForm/CheckoutForm.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/history.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Purchases/Purchases.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Running/Running.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/DeleteLoadingPage/DeleteLoadingPage.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Upload/Upload.js",["112","113"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\n\nclass Upload extends Component {\n    state = {\n \n      // Initially, no file is selected\n      selectedFile: null\n    };\n    // On file select (from the pop up)\n    onFileChange = event => {\n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    };\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData();\n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"api/uploadfile\", formData);\n    };\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n      if (this.state.selectedFile) {\n        return (\n          <div>\n            <h2>File Details:</h2>\n             \n<p>File Name: {this.state.selectedFile.name}</p>\n<p>File Type: {this.state.selectedFile.type}</p>\n<p>\n              Last Modified:{\" \"}\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n    render() {\n      return (\n        <div>\n            <div>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload!\n                </button>\n            </div>\n          {this.fileData()}\n        </div>\n      );\n    }\n  }\n\n\nexport default Upload;\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":47,"column":5,"nodeType":"120","endLine":47,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]