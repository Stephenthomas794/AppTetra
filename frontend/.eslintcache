[{"/Users/stephenthomas/Desktop/AppTetra/frontend/src/index.js":"1","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reportWebVitals.js":"2","/Users/stephenthomas/Desktop/AppTetra/frontend/src/App.js":"3","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoginPage/LoginPage.js":"4","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Nav/Nav.js":"5","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Documentation/Documentation.js":"6","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignUp/SignUp.js":"7","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignIn/SignIn.js":"8","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/index.js":"9","/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/isLogged.js":"10","/Users/stephenthomas/Desktop/AppTetra/frontend/src/actions/index.js":"11","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/HomePage/HomePage.js":"12","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/SubmitProject/SubmitProject.js":"13","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoadingPage/LoadingPage.js":"14","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Projects/Projects.js":"15","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Results/Results.js":"16","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectResults/ProjectResults.js":"17","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/ProjectProfile/ProjectProfile.js":"18","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectInfo/ProjectInfo.js":"19","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Purchase/Purchase.js":"20","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/CheckoutForm/CheckoutForm.js":"21","/Users/stephenthomas/Desktop/AppTetra/frontend/src/history.js":"22","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Purchases/Purchases.js":"23","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Running/Running.js":"24"},{"size":914,"mtime":1612746718783,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611286701503,"results":"27","hashOfConfig":"26"},{"size":2419,"mtime":1612748289497,"results":"28","hashOfConfig":"26"},{"size":1070,"mtime":1612581383706,"results":"29","hashOfConfig":"26"},{"size":3543,"mtime":1612672574770,"results":"30","hashOfConfig":"26"},{"size":1318,"mtime":1612581298147,"results":"31","hashOfConfig":"26"},{"size":4704,"mtime":1611447594960,"results":"32","hashOfConfig":"26"},{"size":3056,"mtime":1611617148217,"results":"33","hashOfConfig":"26"},{"size":184,"mtime":1611538354532,"results":"34","hashOfConfig":"26"},{"size":283,"mtime":1611544469989,"results":"35","hashOfConfig":"26"},{"size":177,"mtime":1611461794309,"results":"36","hashOfConfig":"26"},{"size":6868,"mtime":1612833053877,"results":"37","hashOfConfig":"26"},{"size":3642,"mtime":1612820904103,"results":"38","hashOfConfig":"26"},{"size":582,"mtime":1612470306520,"results":"39","hashOfConfig":"26"},{"size":857,"mtime":1612494347163,"results":"40","hashOfConfig":"26"},{"size":2206,"mtime":1612735892622,"results":"41","hashOfConfig":"26"},{"size":869,"mtime":1612585351946,"results":"42","hashOfConfig":"26"},{"size":2915,"mtime":1612748581923,"results":"43","hashOfConfig":"26"},{"size":872,"mtime":1612709507744,"results":"44","hashOfConfig":"26"},{"size":707,"mtime":1612748907391,"results":"45","hashOfConfig":"26"},{"size":3667,"mtime":1612751173812,"results":"46","hashOfConfig":"26"},{"size":88,"mtime":1612746547186,"results":"47","hashOfConfig":"26"},{"size":947,"mtime":1612758479011,"results":"48","hashOfConfig":"26"},{"size":934,"mtime":1612823656507,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"l6dipi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"/Users/stephenthomas/Desktop/AppTetra/frontend/src/index.js",[],["108","109"],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reportWebVitals.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/App.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoginPage/LoginPage.js",["110"],"import React, { Component } from 'react';\n\nimport Nav from '../../Components/Nav/Nav';\nimport SignUp from '../../Components/SignUp/SignUp';\nimport SignIn from '../../Components/SignIn/SignIn';\n\nimport Table from 'react-bootstrap/Table';\n\nclass LoginPage extends Component {\n    constructor() {\n    super();\n    this.state = {\n        }\n    }\n\n    render(){\n    return(\n        <div className=\"LoginPage\">\n        <header className=\"LoginPage-header\">\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                <th>\n                    Sign In\n                </th>\n                <th>\n                    Sign Up\n                </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                <td>\n                   <SignIn />    \n                </td>\n                <td>\n                    <SignUp /> \n                </td>\n                </tr>\n            </tbody>\n            </Table>\n        </header>\n        </div>\n    )\n    }\n}\n\nexport default LoginPage;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Nav/Nav.js",["111"],"import React, { Component } from 'react';\nimport './Nav.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changeLogFalse } from '../../actions/'; \n\n//import axios from 'axios';\n\nclass Nav extends Component {\n    constructor() {\n    super();\n    this.state = {\n        searchValue:  ''\n    }\n    this.handleSearchValueChange = this.handleSearchValueChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n\n    handleSearchValueChange(event){\n        this.setState({\n            searchValue: event.target.value\n        })\n    }\n\n    handleFormSubmit(event){\n        event.preventDefault();\n        const email = localStorage.getItem('email');\n        console.log(this.state.searchValue);\n        var searchValue = this.state.searchValue\n        \n        const data = {searchValue: searchValue}\n        fetch(`http://127.0.0.1:5000/api/SearchProjects`, {\n            crossDomain: true,\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success', data);\n            console.log(data.message)\n            console.log(data.projectID)\n            this.props.setProjectName(data.message)\n            console.log(data.projectID)\n            this.props.setProjectID(data.projectID)\n            this.props.history.push('/Results');\n        })\n        }\n    \n        \n/*\nstate = {\n        loading: false,\n        value: '',\n        projectResults: null\n    };\n\n    search = async val => {\n        this.setState({ \n            loading: true \n            });\n        const res await axios(\n            'http://127.0.0.1/api/SearchMongo/query=${val}'\n        );\n        projectResults = await res.data.results;\n\n        this.setState({ projectResults, loading: false})\n    }\n\n    onChangeHandler = async e => {\n        this.search(e.target.value);\n        this.setState({ value: e.target.value })\n    };\n\n    get renderProjects(){\n        let projects = ''\n        if (this.state.projectResults){\n            movies = list.push(this.state.projectResults)\n        }\n    }\n*/\n    render() {\n    return (\n    <div className=\"Nav\">\n    <Navbar bg=\"dark\" variant=\"dark\">\n  \n  <Navbar.Brand href=\"/\">AppTetra</Navbar.Brand>\n \n     <Navbar.Text>\n\n    <a href=\"/Documentation\">Documentation</a>\n\n    { this.props.isLogged ? <a href=\"/\" onClick={this.props.changeLogTrue}>  Log out</a> : '' }\n\n    </Navbar.Text>\n\n  <Navbar.Toggle />\n  <Navbar.Collapse className=\"justify-content-end\">\n      <Form inline>\n      <FormControl value={ this.state.searchValue } onChange={ this.handleSearchValueChange } type=\"text\" placeholder=\"Search\" className=\"mr-sm-3\" />\n      <Button onClick= {this.handleFormSubmit} variant=\"outline-primary\">Search</Button>\n    </Form>\n  </Navbar.Collapse>\n</Navbar>\n    </div>\n)}};\n\nconst mapStateToProps = (state) => {\n    return{\n        isLogged: state.isLogged\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        changeLogFalse\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps()) (withRouter(Nav));\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Documentation/Documentation.js",["112"],"import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport Nav from '../../Components/Nav/Nav';\n\nclass Documentation extends Component {\n\nrender(){\n\n    return (\n    <>\n    <Header as='h1'>How to Submit Code to AppTetra</Header>\n    <ListGroup>\n        <ListGroup.Item>1. Code can be submited either via Github or as AWS Lambda</ListGroup.Item>\n        <ListGroup.Item>Currently we can only accept Github</ListGroup.Item>\n        <ListGroup.Item></ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n        <ListGroup.Item> </ListGroup.Item>\n    </ListGroup>\n    <Header as='h1'>For Github Submission</Header>\n    <ListGroup>\n        <ListGroup.Item>Docker and Docker-Compose will be installed</ListGroup.Item>\n        <ListGroup.Item>Docker-Compose will be used to launch your application</ListGroup.Item>\n    </ListGroup>\n    </>\n    )\n    }\n}\n\nexport default Documentation;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignUp/SignUp.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/SignIn/SignIn.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/index.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/reducers/isLogged.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/actions/index.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/HomePage/HomePage.js",["113","114","115","116"],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/SubmitProject/SubmitProject.js",["117"],"import React, { Component } from 'react';\n\nimport Nav from '../../Components/Nav/Nav';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass SubmitProject extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        projectName: '',\n        git: '',\n        entries: [],\n        time: ''\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleGit = this.handleGit.bind(this);\n    this.handleProjectName = this.handleProjectName.bind(this);\n    this.handleTime = this.handleTime.bind(this)\n    }\n   \n  addClick(){\n    this.setState(prevState => ({ \n    \tentries: [...prevState.entries, '']\n    }))\n  }\n  \n  createUI(){\n     return this.state.entries.map((el, i) => (\n       <div key={i}>\n    \t    <Form.Control as=\"textarea\" rows={1} value ={el } onChange={this.handleChange.bind(this,i)} />\n    \t     <Button variant=\"primary\" value='remove' onClick={this.removeClick.bind(this, i)}>\n             Remove\n             </Button>\n       </div>          \n     ))\n  }\n  \n  handleChange(i, event) {\n     let entries = [...this.state.entries];\n     entries[i] = event.target.value;\n     this.setState({ entries });\n  }\n  \n  removeClick(i){\n     let entries = [...this.state.entries];\n     entries.splice(i, 1);\n     this.setState({ entries });\n  }\n\n    handleFormSubmit(event){\n        event.preventDefault();\n        const email = localStorage.getItem('email')\n        const data = { email: email, projectName: this.state.projectName, git: this.state.git, time: this.state.time, entries: this.state.entries }\n        fetch(`http://127.0.0.1:5000/api/SubmitProject`, {\n            crossDomain: true,\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n            console.log('Success', data);\n            this.props.history.push('/HomePage');  \n        })\n        }\n    \n\n    handleProjectName(event){\n        this.setState({ projectName: event.target.value })\n    }\n\n    handleGit(event){\n        this.setState({ git: event.target.value })\n    }\n\n    handleTime(event){\n        this.setState({ time: event.target.value })\n    }\n\n    render() {\n    return (\n        <div className= 'SubmitProject'>\n        <Form onSubmit={this.handleFormSubmit}>\n  \n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Enter Project Name</Form.Label>\n    <Form.Control as=\"textarea\" rows={1} value = { this.state.projectName} onChange={ this.handleProjectName }/>\n  </Form.Group>\n\n<Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Submit Your Github Repository</Form.Label>\n    <Form.Control as=\"textarea\" rows={1} value = { this.state.git } onChange={ this.handleGit }/>\n  </Form.Group>\n\n<Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>How Long Will This Program Run In Days</Form.Label>\n    <Form.Control as=\"textarea\" rows={1} value = { this.state.time } onChange={ this.handleTime }/> \n  </Form.Group>\n\n\n<Form.Group controlId=\"exampleForm.ControlTextarea1\">\n<Form.Label>What Entries Do You Need From User</Form.Label>\n\n          {this.createUI()}\n           <Button variant=\"primary\" value='add more' onClick={this.addClick.bind(this)}>\n            Add More\n            </Button>\n\n</Form.Group>\n\n<Button variant=\"primary\" type=\"submit\">\n        Submit\n    </Button>\n\n</Form>\n        </div>\n    )\n    }\n}\n\nexport default SubmitProject;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/LoadingPage/LoadingPage.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Projects/Projects.js",["118","119"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nclass Projects extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            email: undefined,\n            list: undefined\n    }\n    }\n\n    componentDidMount(){\n        this.setState({\n            list: this.props.list\n        })\n        console.log(this.state.list)\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.list !== prevProps.list){\n            this.setState({\n                list: this.props.list\n            })\n        }\n    }\n\n    render() {\n    return(\n    <div className=\"Projects\">\n    <header className=\"Projects-header\">\n    { this.state.list }\n    </header>\n    </div>\n    )\n    }\n}\n\nexport default Projects;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Results/Results.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectResults/ProjectResults.js",["120","121"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nclass ProjectResults extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            email: undefined,\n            list: undefined\n    }\n    }\n\n    componentDidMount(){\n        this.setState({\n            list: this.props.list\n        })\n        console.log(this.state.list)\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.list !== prevProps.list){\n            this.setState({\n                list: this.props.list\n            })\n        }\n    }\n\n    render() {\n    return(\n    <div className=\"Projects\">\n    <header className=\"Projects-header\">\n    { this.state.list }\n    </header>\n    </div>\n    )\n    }\n}\n\nexport default ProjectResults;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/ProjectProfile/ProjectProfile.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/ProjectInfo/ProjectInfo.js",["122","123"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nclass ProjectInfo extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            email: undefined,\n            list: undefined\n    }\n    }\n\n    componentDidMount(){\n        this.setState({\n            list: this.props.list\n        })\n        console.log(this.state.list)\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.list !== prevProps.list){\n            this.setState({\n                list: this.props.list\n            })\n        }\n    }\n\n    render() {\n    return(\n    <div className=\"Projects-Info\">\n    <header className=\"ProjectsInfo-header\">\n    { this.state.list }\n    </header>\n    </div>\n    )\n    }\n}\n\nexport default ProjectInfo;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Pages/Purchase/Purchase.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/CheckoutForm/CheckoutForm.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/history.js",[],"/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Purchases/Purchases.js",["124","125"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nclass Purchases extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            email: undefined,\n            listOfPurchases: undefined\n    }\n    }\n\n    componentDidMount(){\n        this.setState({\n            listOfPurchases: this.props.listOfPurchases\n        })\n        console.log(this.state.list)\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.listOfPurchases !== prevProps.listOfPurchases){\n            this.setState({\n                listOfPurchases: this.props.listOfPurchases\n            })\n        }\n    }\n\n    render() {\n    return(\n    <div className=\"Projects\">\n    <header className=\"Projects-header\">\n    { this.state.listOfPurchases }\n    </header>\n    </div>\n    )\n    }\n}\n\nexport default Purchases;\n","/Users/stephenthomas/Desktop/AppTetra/frontend/src/Components/Running/Running.js",["126","127"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nclass Running extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            email: undefined,\n            listOfRunning: undefined\n    }\n    }\n\n    componentDidMount(){\n        this.setState({\n            listOfRunning: this.props.listOfRunning\n        })\n        console.log(this.state.listOfRunning)\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.listOfRunning !== prevProps.listOfRunning){\n            this.setState({\n                listOfRunning: this.props.listOfRunning\n            })\n        }\n    }\n\n    render() {\n    return(\n    <div className=\"Running\">\n    <header className=\"Running-header\">\n    { this.state.listOfRunning }\n    </header>\n    </div>\n    )\n    }\n}\n\nexport default Running;\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":11},{"ruleId":"132","severity":1,"message":"136","line":33,"column":15,"nodeType":"134","messageId":"135","endLine":33,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":48,"column":5,"nodeType":"139","endLine":48,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":76,"column":22,"nodeType":"134","messageId":"142","endLine":76,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":82,"column":22,"nodeType":"134","messageId":"142","endLine":82,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":11},{"ruleId":"132","severity":1,"message":"143","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"143","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"143","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"143","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"143","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'i' is already defined.","redeclared","'Button' is defined but never used.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]